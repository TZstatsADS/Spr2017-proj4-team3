svd <- svd(X_train_p2)
# S d*d non-negative diagonal matrix
s <- svd$d
# U n*d and orthonormal in the columns
U <- svd$u
# V d*d and orthonormal
V <- svd$v
# X <- U %*% diag(s) %*% t(V)
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:500){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
w <- as.data.frame(w)
w0 <- cbind(w0, w)
}
rmse <- list()
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred_p2 <- X_test_p2 %*% w
y_pred_p2
rmsei <- mean((y_test - y_pred_p2)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p2 <- as.numeric(rmse)
X_train_p3 <- cbind(X_train_p2,X_train[,1:6]^3)
X_test_p3 <- cbind(X_test_p2,X_test[,1:6]^3)
svd <- svd(X_train_p3)
# S d*d non-negative diagonal matrix
s <- svd$d
# U n*d and orthonormal in the columns
U <- svd$u
# V d*d and orthonormal
V <- svd$v
# X <- U %*% diag(s) %*% t(V)
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:500){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
w <- as.data.frame(w)
w0 <- cbind(w0, w)
}
rmse <- list()
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred_p3 <- X_test_p3 %*% w
y_pred_p3
rmsei <- mean((y_test - y_pred_p3)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p3 <- as.numeric(rmse)
best2 <- min(rmse_p2)
best2
best3 <- min(rmse_p3)
best3
plot(0:500,rmse_p1, xlab="lambda", ylab="RMSE",xlim=c(0, 500), ylim=c(2.2,3.4))
points(0:500,rmse_p2,col="red")
points(0:500,rmse_p3,col="blue")
legend("bottomright", inset=.05, c("p=1","p=2","p=3"), pch=c(1,1,1), col=c("black", "red", "blue"))
title("pth-order polynomial regression model for p = 1,2,3")
minimumlambda2 <- match(best2,rmse_p2)-1
minimumlambda2
minimumlambda3 <- match(best3,rmse_p3)-1
minimumlambda3
X_train <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/X_train.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
y_train <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/y_train.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
X_test <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/X_test.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
y_test <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/y_test.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
svd <- svd(X_train)
s <- svd$d
U <- svd$u
V <- svd$v
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
df <-list()
df0 <- s * s/(lambda + s * s)
df0 <- sum(df0)
df <- as.list(df0)
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:5000){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
dfs <- s * s/(lambda + s * s)
dfs <- sum(dfs)
w <- as.data.frame(w)
df <- c(df, dfs)
w0 <- cbind(w0, w)
}
df <- as.numeric(df)
plot(df,w0[1,],xlim=c(0.3, 7), ylim=c(-6, 3), xlab="df(lambda)", ylab="coeficiency")
points(df,w0[2,],col="blue")
legend("bottomleft", inset=.05, c("Dim1","Dim2","Dim3","Dim4","Dim5","Dim6","Dim7"), pch=c(1,1,1,1,1,1,1), col=c("black", "blue", "red", "yellow", "green", "purple","orange"))
points(df,w0[3,],col="red")
points(df,w0[4,],col="yellow")
points(df,w0[5,],col="green")
points(df,w0[6,],col="purple")
points(df,w0[7,],col="orange")
title("W as a function of df(lambda)")
rmse <- list()
X_test <- as.matrix(X_test)
y_test <- as.matrix(y_test)
w0 <- as.matrix(w0)
for(i in 1:51){
w <- w0[,i]
y_pred <- X_test %*% w
y_pred
rmsei <- mean((y_test - y_pred)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse <- as.numeric(rmse)
plot(0:50,rmse, xlab="lambda", ylab="RMSE")
title("root mean squared error RMSE on the test set")
rmse <- list()
X_test <- as.matrix(X_test)
y_test <- as.matrix(y_test)
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred <- X_test %*% w
y_pred
rmsei <- mean((y_test - y_pred)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p1 <- as.numeric(rmse)
X_train_p2 <- cbind(X_train,X_train[,1:6]^2)
X_test_p2 <- cbind(X_test,X_test[,1:6]^2)
svd <- svd(X_train_p2)
s <- svd$d
U <- svd$u
V <- svd$v
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:500){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
w <- as.data.frame(w)
w0 <- cbind(w0, w)
}
rmse <- list()
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred_p2 <- X_test_p2 %*% w
y_pred_p2
rmsei <- mean((y_test - y_pred_p2)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p2 <- as.numeric(rmse)
X_train_p3 <- cbind(X_train_p2,X_train[,1:6]^3)
X_test_p3 <- cbind(X_test_p2,X_test[,1:6]^3)
svd <- svd(X_train_p3)
s <- svd$d
U <- svd$u
V <- svd$v
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:500){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
w <- as.data.frame(w)
w0 <- cbind(w0, w)
}
rmse <- list()
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred_p3 <- X_test_p3 %*% w
y_pred_p3
rmsei <- mean((y_test - y_pred_p3)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p3 <- as.numeric(rmse)
best2 <- min(rmse_p2)
best2
best3 <- min(rmse_p3)
best3
plot(0:500,rmse_p1, xlab="lambda", ylab="RMSE",xlim=c(0, 500), ylim=c(2.2,3.4))
points(0:500,rmse_p2,col="red")
points(0:500,rmse_p3,col="blue")
legend("bottomright", inset=.05, c("p=1","p=2","p=3"), pch=c(1,1,1), col=c("black", "red", "blue"))
title("pth-order polynomial regression model for p = 1,2,3")
minimumlambda2 <- match(best2,rmse_p2)-1
minimumlambda2
minimumlambda3 <- match(best3,rmse_p3)-1
minimumlambda3
y_pred
source('~/Desktop/2017 Spring Columbia/ML for DS/homework/hwsubmitted/hw1/hw1r_d_min.R', echo=TRUE)
X_train <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/X_train.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
y_train <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/y_train.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
X_test <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/X_test.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
y_test <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/y_test.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
svd <- svd(X_train)
s <- svd$d
U <- svd$u
V <- svd$v
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
df <-list()
df0 <- s * s/(lambda + s * s)
df0 <- sum(df0)
df <- as.list(df0)
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:5000){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
dfs <- s * s/(lambda + s * s)
dfs <- sum(dfs)
w <- as.data.frame(w)
df <- c(df, dfs)
w0 <- cbind(w0, w)
}
df <- as.numeric(df)
plot(df,w0[1,],xlim=c(0.3, 7), ylim=c(-6, 3), xlab="df(lambda)", ylab="coeficiency")
points(df,w0[2,],col="blue")
legend("bottomleft", inset=.05, c("Dim1","Dim2","Dim3","Dim4","Dim5","Dim6","Dim7"), pch=c(1,1,1,1,1,1,1), col=c("black", "blue", "red", "yellow", "green", "purple","orange"))
points(df,w0[3,],col="red")
points(df,w0[4,],col="yellow")
points(df,w0[5,],col="green")
points(df,w0[6,],col="purple")
points(df,w0[7,],col="orange")
title("W as a function of df(lambda)")
rmse <- list()
X_test <- as.matrix(X_test)
y_test <- as.matrix(y_test)
w0 <- as.matrix(w0)
for(i in 1:51){
w <- w0[,i]
y_pred <- X_test %*% w
y_pred
rmsei <- mean((y_test - y_pred)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse <- as.numeric(rmse)
plot(0:50,rmse, xlab="lambda", ylab="RMSE")
title("root mean squared error RMSE on the test set")
rmse <- list()
X_test <- as.matrix(X_test)
y_test <- as.matrix(y_test)
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred <- X_test %*% w
y_pred
rmsei <- mean((y_test - y_pred)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p1 <- as.numeric(rmse)
X_train_p2 <- cbind(X_train,X_train[,1:6]^2)
X_test_p2 <- cbind(X_test,X_test[,1:6]^2)
svd <- svd(X_train_p2)
s <- svd$d
U <- svd$u
V <- svd$v
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:501){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
w <- as.data.frame(w)
w0 <- cbind(w0, w)
}
rmse <- list()
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred_p2 <- X_test_p2 %*% w
y_pred_p2
rmsei <- mean((y_test - y_pred_p2)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p2 <- as.numeric(rmse)
X_train_p3 <- cbind(X_train_p2,X_train[,1:6]^3)
X_test_p3 <- cbind(X_test_p2,X_test[,1:6]^3)
svd <- svd(X_train_p3)
s <- svd$d
U <- svd$u
V <- svd$v
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:501){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
w <- as.data.frame(w)
w0 <- cbind(w0, w)
}
rmse <- list()
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred_p3 <- X_test_p3 %*% w
y_pred_p3
rmsei <- mean((y_test - y_pred_p3)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p3 <- as.numeric(rmse)
best2 <- min(rmse_p2)
best2
best3 <- min(rmse_p3)
best3
plot(0:500,rmse_p1, xlab="lambda", ylab="RMSE",xlim=c(0, 500), ylim=c(2.2,3.4))
points(0:500,rmse_p2,col="red")
points(0:500,rmse_p3,col="blue")
legend("bottomright", inset=.05, c("p=1","p=2","p=3"), pch=c(1,1,1), col=c("black", "red", "blue"))
title("pth-order polynomial regression model for p = 1,2,3")
minimumlambda2 <- match(best2,rmse_p2)-1
minimumlambda2
minimumlambda3 <- match(best3,rmse_p3)-1
minimumlambda3
X_train <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/X_train.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
y_train <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/y_train.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
X_test <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/X_test.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
y_test <- read.csv("~/Desktop/2017 Spring Columbia/ML for DS/homework/hw1-data/y_test.csv", fill=TRUE, header = FALSE, stringsAsFactors = FALSE)
svd <- svd(X_train)
# S d*d non-negative diagonal matrix
s <- svd$d
# U n*d and orthonormal in the columns
U <- svd$u
# V d*d and orthonormal
V <- svd$v
# X <- U %*% diag(s) %*% t(V)
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
df <-list()
df0 <- s * s/(lambda + s * s)
df0 <- sum(df0)
df <- as.list(df0)
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:5000){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
dfs <- s * s/(lambda + s * s)
dfs <- sum(dfs)
w <- as.data.frame(w)
df <- c(df, dfs)
w0 <- cbind(w0, w)
}
df <- as.numeric(df)
plot(df,w0[1,],xlim=c(0.3, 7), ylim=c(-6, 3), xlab="df(lambda)", ylab="coeficiency")
points(df,w0[2,],col="blue")
legend("bottomleft", inset=.05, c("Dim1","Dim2","Dim3","Dim4","Dim5","Dim6","Dim7"), pch=c(1,1,1,1,1,1,1), col=c("black", "blue", "red", "yellow", "green", "purple","orange"))
points(df,w0[3,],col="red")
points(df,w0[4,],col="yellow")
points(df,w0[5,],col="green")
points(df,w0[6,],col="purple")
points(df,w0[7,],col="orange")
title("W as a function of df(lambda)")
rmse <- list()
X_test <- as.matrix(X_test)
y_test <- as.matrix(y_test)
w0 <- as.matrix(w0)
for(i in 1:51){
w <- w0[,i]
y_pred <- X_test %*% w
y_pred
rmsei <- mean((y_test - y_pred)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse <- as.numeric(rmse)
plot(0:50,rmse, xlab="lambda", ylab="RMSE")
title("root mean squared error RMSE on the test set")
rmse <- list()
X_test <- as.matrix(X_test)
y_test <- as.matrix(y_test)
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred <- X_test %*% w
y_pred
rmsei <- mean((y_test - y_pred)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p1 <- as.numeric(rmse)
X_train_p2 <- cbind(X_train,X_train[,1:6]^2)
X_test_p2 <- cbind(X_test,X_test[,1:6]^2)
svd <- svd(X_train_p2)
# S d*d non-negative diagonal matrix
s <- svd$d
# U n*d and orthonormal in the columns
U <- svd$u
# V d*d and orthonormal
V <- svd$v
# X <- U %*% diag(s) %*% t(V)
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:500){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
w <- as.data.frame(w)
w0 <- cbind(w0, w)
}
rmse <- list()
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred_p2 <- X_test_p2 %*% w
y_pred_p2
rmsei <- mean((y_test - y_pred_p2)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p2 <- as.numeric(rmse)
X_train_p3 <- cbind(X_train_p2,X_train[,1:6]^3)
X_test_p3 <- cbind(X_test_p2,X_test[,1:6]^3)
svd <- svd(X_train_p3)
# S d*d non-negative diagonal matrix
s <- svd$d
# U n*d and orthonormal in the columns
U <- svd$u
# V d*d and orthonormal
V <- svd$v
# X <- U %*% diag(s) %*% t(V)
y_trainm <- as.matrix(y_train)
i = 0
lambda <- i
S <- diag(s/(lambda + s * s))
w0 <- V %*% S %*% t(U) %*% y_trainm
for(i in 1:500){
lambda <- i
S <- diag(s/(lambda + s * s))
w <- V %*% S %*% t(U) %*% y_trainm
w <- as.data.frame(w)
w0 <- cbind(w0, w)
}
rmse <- list()
w0 <- as.matrix(w0)
for(i in 1:501){
w <- w0[,i]
y_pred_p3 <- X_test_p3 %*% w
y_pred_p3
rmsei <- mean((y_test - y_pred_p3)^2)^(1/2)
rmse <- c(rmse, rmsei)
}
rmse_p3 <- as.numeric(rmse)
best2 <- min(rmse_p2)
best2
best3 <- min(rmse_p3)
best3
plot(0:500,rmse_p1, xlab="lambda", ylab="RMSE",xlim=c(0, 500), ylim=c(2.2,3.4))
points(0:500,rmse_p2,col="red")
points(0:500,rmse_p3,col="blue")
legend("bottomright", inset=.05, c("p=1","p=2","p=3"), pch=c(1,1,1), col=c("black", "red", "blue"))
title("pth-order polynomial regression model for p = 1,2,3")
minimumlambda2 <- match(best2,rmse_p2)-1
minimumlambda2
minimumlambda3 <- match(best3,rmse_p3)-1
minimumlambda3
setwd("~/Spr2017-proj4-team3")
if (!require("pacman")) install.packages("pacman")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(text2vec, dplyr, qlcMatrix, kernlab, knitr)
setwd("~/doc")
setwd("~/Spr2017-proj4-team3/doc")
AKumar <- data.frame(scan("~/Dropbox/Project4_WhoIsWho/data/nameset/AKumar.txt",
what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE),stringsAsFactors=FALSE)
AKumar <- data.frame(scan("~/data/nameset/AKumar.txt",
what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE),stringsAsFactors=FALSE)
setwd("~/Spr2017-proj4-team3")
AKumar <- data.frame(scan("~/data/nameset/AKumar.txt",
what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE),stringsAsFactors=FALSE)
AKumar <- data.frame(scan("~/Spr2017-proj4-team3/data/nameset/AKumar.txt",
what = list(Coauthor = "", Paper = "", Journal = ""),
sep=">", quiet=TRUE),stringsAsFactors=FALSE)
View(AKumar)
AKumar$AuthorID <- sub("_.*","",AKumar$Coauthor)
View(AKumar)
AKumar$PaperNO <- sub(".*_(\\w*)\\s.*", "\\1", AKumar$Coauthor)
View(AKumar)
AKumar$Coauthor <- gsub("<","",sub("^.*?\\s","", AKumar$Coauthor))
AKumar$Paper <- gsub("<","",AKumar$Paper)
AKumar$PaperID <- rownames(AKumar)
